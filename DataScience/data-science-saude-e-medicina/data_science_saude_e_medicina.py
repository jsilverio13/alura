# -*- coding: utf-8 -*-
"""data-science-saude-e-medicina.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1W7U6HkUP21ggqrZeAb7N7qpHmKK8Mh--
"""

import pandas as pd

confirmed = pd.read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
deaths = pd.read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv")
recovered = pd.read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv")

confirmed.head()

last_date = "2/4/22"

confirmed[last_date]

confirmed['Country/Region']

confirmed.shape

confirmed['Country/Region'].value_counts()

confirmed.sample(10)

confirmed.iloc[0]

confirmed.set_index('Province/State').loc['Zhejiang']

confirmed_by_country = confirmed.groupby("Country/Region").sum()
confirmed_by_country.head()

confirmed_by_country.sample(15)

import matplotlib.pyplot as plt


plt.figure(figsize=(20,5))
confirmed_by_country.loc['China'][2:].plot()
plt.title('Casos confirmados em China')
plt.show()

import matplotlib.pyplot as plt


plt.figure(figsize=(20,5))
confirmed_by_country.loc['China'][2:350].plot()
plt.title('Casos confirmados em China')
plt.show()

new_cases_china = confirmed_by_country.loc["China"][2:60].diff()
new_cases_china

plt.figure(figsize=(30,20))
new_cases_china.plot()
plt.title('Diferença confirmados em China')
plt.show()

confirmed_by_country.head()

plt.figure(figsize=(20,15))
plt.title('Confirmados por país')
confirmed_by_country[last_date].plot(kind='pie')
plt.show()

plt.figure(figsize=(15,6))
plt.title('Confirmados por país')
confirmed_by_country[last_date].sort_values(ascending=False)[0:10].plot(kind='bar')
plt.show()

confirmed.groupby('Country/Region').sum()[last_date].head()

def latest_by_country(data):
    return data.groupby('Country/Region').sum().iloc[:, -3]

informations = [latest_by_country(confirmed),latest_by_country(deaths),latest_by_country(recovered)]
combined = pd.concat(informations,axis=1)
combined.columns = ['confirmed','deaths','recovered']
combined

sum_up = combined.sum()
letality_rate_1 = sum_up['deaths'] / sum_up['confirmed']
print(letality_rate_1 * 100)

letality_rate_1 = combined['deaths'] / combined['confirmed'] * 100
combined['letality_rate_1'] = letality_rate_1
combined.head()

letality_rate_2 = combined['deaths'] / (combined['recovered'] + combined['deaths'])
letality_rate_2
combined['letality_rate_2'] = letality_rate_2

combined.head()

combined.sort_values('letality_rate_1', ascending=False).head(10)

import seaborn as sns

sns.scatterplot(data=combined, x='confirmed', y='letality_rate_1')

sns.distplot(combined["letality_rate_1"], kde=False)

combined.sort_values('letality_rate_1', ascending=False).head(10)

def latest_by_country_at(data, date):
  return data.groupby("Country/Region").sum()[date]


informations = [latest_by_country_at(confirmed, '2/20/20'), latest_by_country_at(deaths, '2/20/20'), latest_by_country_at(recovered, '2/20/20')]
combined_2_20_20 = pd.concat(informations, axis=1)
combined_2_20_20.columns = ["confirmed", "deaths", "recovered"]

sum_up = combined_2_20_20.loc["China"]
letality_rate_1 = sum_up["deaths"] / sum_up["confirmed"]
letality_rate_2 = sum_up["deaths"] / (sum_up["deaths"] + sum_up["recovered"])
print(letality_rate_1 * 100)
print(letality_rate_2 * 100)

display(sum_up)

informations = [latest_by_country_at(confirmed, '2/8/20'), latest_by_country_at(deaths, '2/20/20'), latest_by_country_at(recovered, '2/20/20')]
combined_12 = pd.concat(informations, axis=1)
combined_12.columns = ["confirmed", "deaths", "recovered"]

sum_up = combined_12.loc["China"]
letality_rate_3 = sum_up["deaths"] / sum_up["confirmed"]
print(letality_rate_3 * 100)
display(sum_up)

letality_rate_1 = combined["deaths"] / combined["confirmed"] * 100
letality_rate_2 = combined["deaths"] / (combined["recovered"] + combined["deaths"]) * 100
combined["letality_rate_1"] = letality_rate_1
combined["letality_rate_2"] = letality_rate_2
combined.head()

combined.sort_values("letality_rate_1", ascending=False).head(10)

