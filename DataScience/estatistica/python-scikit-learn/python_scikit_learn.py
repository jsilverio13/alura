# -*- coding: utf-8 -*-
"""python-scikit-learn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HEwbGigoYsiMJMNpy0hErOQeK0K15bbc

## **Importando a biblioteca**
"""

import sklearn

"""## **Base de dados**"""

from sklearn import datasets

iris = datasets.load_iris
iris

import pandas as pd
diabetes = pd.read_csv('diabetes.csv')
diabetes.head()

batimentos = pd.read_csv('batimentos cardiacos.csv', sep=',')
batimentos.head()

colesterol = pd.read_csv('colesterol.csv', sep=',')
colesterol.head()

from sklearn.model_selection import train_test_split

x = diabetes['idade']
y = diabetes['resultado']

x_treino, x_teste, y_treino, y_test = train_test_split(x, y)

diabetes.head()

x = diabetes.drop('resultado', axis=1)
x

y = diabetes['resultado']
y

from sklearn.model_selection import train_test_split

SEED = 4121988

x_treino, x_teste, y_treino, y_teste = train_test_split(x, y)

from sklearn.tree import DecisionTreeClassifier

clf_arvore = DecisionTreeClassifier(random_state=SEED, max_depth=3)

clf_arvore.fit(x_treino, y_treino)

clf_arvore.score(x_teste, y_teste)

from sklearn.dummy import DummyClassifier

clf_dummy = DummyClassifier(strategy='most_frequent')
clf_dummy.fit(x_treino,y_treino)

clf_dummy.score(x_teste,y_teste)

from sklearn import tree
import matplotlib.pyplot as plt

fig, ax = plt.subplots(figsize=(15,10))
tree.plot_tree(clf_arvore,
               ax=ax,
               fontsize=10,
               rounded=True,
               filled=True,
               feature_names=x_treino.columns,
               class_names=['NÃ£o Ativado', 'Ativado'], rotate=True)
plt.show

batimentos.head()

import matplotlib.pyplot as plt
import seaborn as sns

sns.set()
plt.figure(figsize=(100, 50))

sns.lmplot(x='Peso', y='Batimentos cardiacos', data=batimentos,line_kws={'color':'red'})
plt.show()

x = batimentos[['Peso','Idade']]
y = batimentos['Batimentos cardiacos']

from sklearn.model_selection import train_test_split

SEED=4500

x_treino, x_teste, y_treino, y_teste = train_test_split(x, y, random_state = SEED)

from sklearn import linear_model

rgs = linear_model.LinearRegression(fit_intercept=False, normalize=True)

rgs.fit(x_treino, y_treino)
rgs.score(x_teste, y_teste)

import seaborn as sns

sns.scatterplot(x = 'pressao_sanguinea_repouso', y = 'colesterol', data = colesterol)

from sklearn.cluster import KMeans

kmeans = KMeans(n_clusters = 2, random_state = 9)

x = colesterol.select_dtypes('int64')
kmeans.fit(x)
kmeans.labels_

sns.scatterplot(x='pressao_sanguinea_repouso', y='colesterol', data= colesterol, hue = kmeans.labels_)

colesterol['clusters'] = kmeans.labels_
colesterol.head()

colesterol.groupby('clusters')['colesterol'].mean()

